// <auto-generated />
using System;
using Kutuphane.DAL.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kutuphane.DAL.Migrations
{
    [DbContext(typeof(KutuphaneContext))]
    [Migration("20230813114447_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Kutuphane.Entity.Model.Emanet", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<bool?>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenPersonelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EmanetTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GuncelleyenPersonelId")
                        .HasColumnType("int");

                    b.Property<int>("KitapKopyaId")
                        .HasColumnType("int");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<bool?>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SonTeslimTarih")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TeslimTarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("UyeId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KitapKopyaId");

                    b.HasIndex("PersonelId");

                    b.HasIndex("UyeId");

                    b.ToTable("Emanet");
                });

            modelBuilder.Entity("Kutuphane.Entity.Model.Kategori", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenPersonelId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GuncelleyenPersonelId")
                        .HasColumnType("int");

                    b.Property<bool?>("SilindiMi")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("Kategori");
                });

            modelBuilder.Entity("Kutuphane.Entity.Model.Kitap", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenPersonelId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GuncelleyenPersonelId")
                        .HasColumnType("int");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<int>("SayfaSayisi")
                        .HasColumnType("int");

                    b.Property<bool?>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("YayinTarih")
                        .HasColumnType("datetime2");

                    b.Property<int>("YayineviId")
                        .HasColumnType("int");

                    b.Property<int>("YazarId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("KategoriId");

                    b.HasIndex("YayineviId");

                    b.HasIndex("YazarId");

                    b.ToTable("Kitap");
                });

            modelBuilder.Entity("Kutuphane.Entity.Model.KitapKopya", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<bool?>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenPersonelId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GuncelleyenPersonelId")
                        .HasColumnType("int");

                    b.Property<int>("KitapId")
                        .HasColumnType("int");

                    b.Property<int>("KopyaNo")
                        .HasColumnType("int");

                    b.Property<bool?>("SilindiMi")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("KitapId");

                    b.ToTable("KitapKopya");
                });

            modelBuilder.Entity("Kutuphane.Entity.Model.Personel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenPersonelId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GuncelleyenPersonelId")
                        .HasColumnType("int");

                    b.Property<string>("Sifre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("ID");

                    b.ToTable("Personel");
                });

            modelBuilder.Entity("Kutuphane.Entity.Model.Uye", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("Cinsiyet")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("EMail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenPersonelId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GuncelleyenPersonelId")
                        .HasColumnType("int");

                    b.Property<bool?>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("ID");

                    b.ToTable("Uye");
                });

            modelBuilder.Entity("Kutuphane.Entity.Model.Yayinevi", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool?>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenPersonelId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GuncelleyenPersonelId")
                        .HasColumnType("int");

                    b.Property<bool?>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("ID");

                    b.ToTable("Yayinevi");
                });

            modelBuilder.Entity("Kutuphane.Entity.Model.Yazar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EkleyenPersonelId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GuncelleyenPersonelId")
                        .HasColumnType("int");

                    b.Property<bool?>("SilindiMi")
                        .HasColumnType("bit");

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Yazar");
                });

            modelBuilder.Entity("Kutuphane.Entity.Model.Emanet", b =>
                {
                    b.HasOne("Kutuphane.Entity.Model.KitapKopya", "KitapKopya")
                        .WithMany("Emanetler")
                        .HasForeignKey("KitapKopyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kutuphane.Entity.Model.Personel", "Personel")
                        .WithMany("Emanetler")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kutuphane.Entity.Model.Uye", "Uye")
                        .WithMany("Emanetler")
                        .HasForeignKey("UyeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KitapKopya");

                    b.Navigation("Personel");

                    b.Navigation("Uye");
                });

            modelBuilder.Entity("Kutuphane.Entity.Model.Kitap", b =>
                {
                    b.HasOne("Kutuphane.Entity.Model.Kategori", "Kategori")
                        .WithMany("Kitaplar")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kutuphane.Entity.Model.Yayinevi", "Yayinevi")
                        .WithMany("Kitaplar")
                        .HasForeignKey("YayineviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kutuphane.Entity.Model.Yazar", "Yazar")
                        .WithMany("Kitaplar")
                        .HasForeignKey("YazarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");

                    b.Navigation("Yayinevi");

                    b.Navigation("Yazar");
                });

            modelBuilder.Entity("Kutuphane.Entity.Model.KitapKopya", b =>
                {
                    b.HasOne("Kutuphane.Entity.Model.Kitap", "Kitap")
                        .WithMany("KitapKopyalari")
                        .HasForeignKey("KitapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kitap");
                });

            modelBuilder.Entity("Kutuphane.Entity.Model.Kategori", b =>
                {
                    b.Navigation("Kitaplar");
                });

            modelBuilder.Entity("Kutuphane.Entity.Model.Kitap", b =>
                {
                    b.Navigation("KitapKopyalari");
                });

            modelBuilder.Entity("Kutuphane.Entity.Model.KitapKopya", b =>
                {
                    b.Navigation("Emanetler");
                });

            modelBuilder.Entity("Kutuphane.Entity.Model.Personel", b =>
                {
                    b.Navigation("Emanetler");
                });

            modelBuilder.Entity("Kutuphane.Entity.Model.Uye", b =>
                {
                    b.Navigation("Emanetler");
                });

            modelBuilder.Entity("Kutuphane.Entity.Model.Yayinevi", b =>
                {
                    b.Navigation("Kitaplar");
                });

            modelBuilder.Entity("Kutuphane.Entity.Model.Yazar", b =>
                {
                    b.Navigation("Kitaplar");
                });
#pragma warning restore 612, 618
        }
    }
}
